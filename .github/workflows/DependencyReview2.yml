name: 'Dependency Review'

on: [pull_request]

permissions:
  contents: read

jobs:
  dependency-review:
    runs-on: ubuntu-latest
    steps:
     # Passo 1: Checkout do Repositório
     - name: 'Checkout Repository'
       uses: actions/checkout@v4

     # Passo 2: Executar Dependency Review
     - name: 'Executar Dependency Review'
       uses: actions/dependency-review-action@v4
       with:
         fail-on-severity: high # Somente vulnerabilidades de alta gravidade
         output: json           # Salvar a saída em formato JSON

     # Passo 3: Verificar se o arquivo foi gerado
     - name: 'Verificar Existência do Arquivo'
       run: ls -lh dependency-review-report.json || echo "Arquivo não encontrado!"

     # Passo 4: Dividir o arquivo grande em partes menores
     - name: 'Dividir Saída em Partes'
       run: |
         if [ -f dependency-review-report.json ]; then
           split -b 900k dependency-review-report.json part_
         else
           echo "Arquivo dependency-review-report.json não foi encontrado!"
         fi
       shell: bash

     # Passo 5: Adicionar a primeira parte ao Summary
     - name: 'Adicionar Primeira Parte ao Summary'
       run: |
         if [ -f part_aa ]; then
           echo "### Parte 1 do Resumo" >> $GITHUB_STEP_SUMMARY
           cat part_aa >> $GITHUB_STEP_SUMMARY
         else
           echo "Nenhuma parte gerada para adicionar ao summary."
         fi

     # Passo 6: Salvar as partes restantes como artefatos
     - name: 'Salvar Partes Restantes como Artefato'
       uses: actions/upload-artifact@v3
       with:
         name: dependency-review-parts
         path: part_*

     # Passo 7: Adicionar Link para o Artefato no Summary
     - name: 'Adicionar Link para o Artefato'
       run: |
         echo "### Relatório Completo Disponível" >> $GITHUB_STEP_SUMMARY
         echo "O relatório completo pode ser acessado nos artefatos gerados pelo workflow." >> $GITHUB_STEP_SUMMARY
